#!/usr/bin/env python
"""Prepare the dataframe for the R package CEM.

Our aim is to perform sample matching using the R package CEM. The matching will
be performed on the following variables:
    * Average AGE during treatment
    * Gender
    * Last State (VIC, NSW, ...)
    * Length of the extracted sequence

This script simply loads raw sequences and extra info generated by
`extracted_sequences.py` and prepares the dataframe for the R package CEM
(see: https://cran.r-project.org/web/packages/cem/vignettes/cem.pdf)
"""

import argparse


def parse_arguments():
    """"Parse input arguments."""
    parser = argparse.ArgumentParser(description='MBS-PBS 10% data/labels '
                                                 'extraction.')
    parser.add_argument('-r', '--root', type=str,
                        help='Raw data generated by `extract_sequences.py` '
                        'root folder.', default=None)
    parser.add_argument('-o', '--output', type=str,
                        help='Ouput file name root.',
                        default=None)
    parser.add_argument('-sic', '--skip_input_check', action='store_false',
                        help='Skip the input check (default=False).')
    # parser.add_argument('-nj', '--n_jobs', type=int,
    #                     help='The number of processes to use.', default=4)
    args = parser.parse_args()
    return args

def init_main():
    """Initialize the main routine."""
    args = parse_arguments()

    if args.source is None or not os.path.exists(args.source):
        raise ValueError('{} is not a valid PTNT_ID csv file'.format(args.source))

    # Check input dataset
    if args.root is None:
        args.root = os.path.join('..', '..', 'data')
    if args.skip_input_check: check_input(args.root)

    # Check output filename
    if args.output is None:
        args.output = args.source[:-4]+'_'

    return args


def main():
    """Main matching_step1.py routine."""
    print('-------------------------------------------------------------------')
    print('MBS - PBS 10% dataset utility: matching_step1.py')
    print('-------------------------------------------------------------------')
    args = init_main()


################################################################################

if __name__ == '__main__':
    main()
